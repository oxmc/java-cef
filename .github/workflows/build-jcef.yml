name: Build java-cef

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  java-cef-linux:
    runs-on: [ubuntu-20.04]
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Install deps and build
        run: |
          sudo apt update
          sudo apt install build-essential g++ cmake ninja-build python3 libgtk2.0-dev -y
          mkdir jcef_build && cd jcef_build
          # Set the GN flags to enable proprietary codecs
          export CEF_USE_GN=1
          export GN_DEFINES="is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome"
          cmake -G "Ninja" -DPROJECT_ARCH=${{ matrix.platform }} -DCMAKE_BUILD_TYPE=Release ..
          ninja -j4
          mv native/Release linux_${{ matrix.platform }}
          strip linux_${{ matrix.platform }}/libcef.so
          tar -czf linux_${{ matrix.platform }}.tar.gz linux_${{ matrix.platform }}
          sha256sum linux_${{ matrix.platform }}.tar.gz > linux_${{ matrix.platform }}.tar.gz.sha256
      - name: Upload java-cef build
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.platform }}-build
          path: jcef_build/linux_${{ matrix.platform }}.tar.gz
  java-cef-windows:
    runs-on: [windows-2022]
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build
        run: |
          mkdir jcef_build && cd jcef_build
          $env:CEF_USE_GN = "1"
          $env:GN_DEFINES = "is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome"
          cmake -G "Ninja" -DPROJECT_ARCH=${{ matrix.platform }} -DCMAKE_BUILD_TYPE=Release ..
          ninja -j4
          cd native
          ren Release windows_${{ matrix.platform }}
          cd ..
          move native/windows_${{ matrix.platform }} windows_${{ matrix.platform }}
          tar -czf windows_${{ matrix.platform }}.tar.gz windows_${{ matrix.platform }}
          Get-FileHash -Algorithm SHA256 -Path "windows_${{ matrix.platform }}.tar.gz" | Out-File "windows_${{ matrix.platform }}.tar.gz.sha256"
      - name: Upload java-cef build
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.platform }}-build
          path: jcef_build/windows_${{ matrix.platform }}.tar.gz
  java-cef-macos:
    runs-on: [macos-12]
    strategy:
      matrix:
        platform: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - run: |
          brew install ninja
          brew install coreutils
          sudo xcode-select --switch /Applications/Xcode_13.1.app
          mkdir jcef_build && cd jcef_build
          # Set the GN flags to enable proprietary codecs
          export CEF_USE_GN=1
          export GN_DEFINES="is_official_build=true proprietary_codecs=true ffmpeg_branding=Chrome"
          cmake -G "Ninja" -DPROJECT_ARCH=${{ matrix.platform }} -DCMAKE_BUILD_TYPE=Release ..
          ninja -j4
          mv native/Release macos_${{ matrix.platform }}
          tar -czf macos_${{ matrix.platform }}.tar.gz macos_${{ matrix.platform }}
          sha256sum macos_${{ matrix.platform }}.tar.gz > macos_${{ matrix.platform }}.tar.gz.sha256
      - name: Upload java-cef build
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.platform }}-build
          path: jcef_build/macos_${{ matrix.platform }}.tar.gz
